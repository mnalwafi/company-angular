import { Component, ElementRef, HostListener, Renderer2 } from '@angular/core';
import { RectangleCardComponent } from '../card/rectangle-card/rectangle-card.component';
import { TitleCardComponent } from '../card/title-card/title-card.component';
import { BoxCardComponent } from '../card/box-card/box-card.component';
import { TechnologySessionComponent } from './front-end-technologies/technology-session.component';
import { DomSanitizer } from '@angular/platform-browser';

@Component({
  selector: 'ds-company-technology',
  template: `
    <section class="flex flex-col gap-4 items-center">
      <ds-title-card
        [card]="titleCard"
        class="animate-up title-card"
      ></ds-title-card>
      <ds-technology-session
        [technology]="'Front End Technologies'"
        [card]="feCard"
      ></ds-technology-session>
      <ds-technology-session
        [technology]="'Back End Technologies'"
        [card]="beCard"
      ></ds-technology-session>
      <ds-technology-session
        [technology]="'Artificial Intellegence Technologies'"
        [card]="aiCard"
      ></ds-technology-session>
    </section>
  `,
  standalone: true,
  imports: [
    RectangleCardComponent,
    TitleCardComponent,
    BoxCardComponent,
    TechnologySessionComponent,
  ],
})
export class CompanyTechnologyComponent {
  constructor(
    private el: ElementRef,
    private renderer: Renderer2,
    private sanitizer: DomSanitizer
  ) {}

  @HostListener('window:scroll', ['$event'])
  onWindowScroll() {
    const titleCard = this.el.nativeElement.querySelector('.title-card');
    const boxCardSession =
      this.el.nativeElement.querySelector('.box-card-session');

    this.checkAndAnimate(titleCard);
    this.checkAndAnimate(boxCardSession, true);
  }

  feCard = [
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="266" viewBox="0 0 250 266" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_962)">
        <mask id="mask0_504_962" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="250" height="266">
        <path d="M0 0.768555H250V265.231H0V0.768555Z" fill="white"/>
        </mask>
        <g mask="url(#mask0_504_962)">
        <mask id="mask1_504_962" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="250" height="266">
        <path d="M0 0.768555H250V265.231H0V0.768555Z" fill="white"/>
        </mask>
        <g mask="url(#mask1_504_962)">
        <path d="M248.967 45.19L239.669 185.686L153.926 0.768555L248.967 45.19ZM189.05 227.008L125 264.198L59.9174 227.008L72.3141 194.983H176.653L189.05 227.008ZM125 71.0165L158.058 153.661H90.9091L125 71.0165ZM9.29752 185.686L0 45.19L95.0413 0.768555L9.29752 185.686Z" fill="url(#paint0_linear_504_962)"/>
        <path d="M248.967 45.19L239.669 185.686L153.926 0.768555L248.967 45.19ZM189.05 227.008L125 264.198L59.9174 227.008L72.3141 194.983H176.653L189.05 227.008ZM125 71.0165L158.058 153.661H90.9091L125 71.0165ZM9.29752 185.686L0 45.19L95.0413 0.768555L9.29752 185.686Z" fill="url(#paint1_linear_504_962)"/>
        </g>
        </g>
        </g>
        <defs>
        <linearGradient id="paint0_linear_504_962" x1="54.9587" y1="240.335" x2="253.099" y2="146.12" gradientUnits="userSpaceOnUse">
        <stop stop-color="#E40035"/>
        <stop offset="0.2" stop-color="#F60A48"/>
        <stop offset="0.4" stop-color="#F20755"/>
        <stop offset="0.5" stop-color="#DC087D"/>
        <stop offset="0.7" stop-color="#9717E7"/>
        <stop offset="1" stop-color="#6C00F5"/>
        </linearGradient>
        <linearGradient id="paint1_linear_504_962" x1="45.9711" y1="32.4834" x2="175.62" y2="180.521" gradientUnits="userSpaceOnUse">
        <stop stop-color="#FF31D9"/>
        <stop offset="1" stop-color="#FF5BE1" stop-opacity="0"/>
        </linearGradient>
        <clipPath id="clip0_504_962">
        <rect width="250" height="264.463" fill="white" transform="translate(0 0.768555)"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[240px] md:w-[200px] w-[120px]',
      imageStyleTop: 'top-1/2 -translate-y-[75%]',
      headerText: 'Angular',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A powerful TypeScript-based front-end web framework used for building dynamic single-page applications (SPAs), providing features like two-way data binding, dependency injection, and a modular structure',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'fe-card',
    },
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="251" height="251" viewBox="0 0 251 251" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_984)">
        <path d="M125.443 50.6055C92.1091 50.6055 71.283 67.2656 62.9431 100.6C75.4392 83.9375 90.0271 77.6895 106.689 81.8555C116.203 84.2266 123.002 91.125 130.531 98.7695C142.785 111.205 156.969 125.602 187.943 125.602C221.275 125.602 242.103 108.939 250.443 75.5977C237.945 92.2695 223.359 98.5176 206.695 94.3516C197.183 91.9785 190.392 85.082 182.853 77.4375C170.607 65.002 156.427 50.6055 125.443 50.6055ZM62.9431 125.602C29.6111 125.602 8.78296 142.264 0.443115 175.605C12.9392 158.934 27.5251 152.686 44.1892 156.852C53.7029 159.225 60.5017 166.121 68.031 173.766C80.2849 186.201 94.4685 200.598 125.443 200.598C158.775 200.598 179.603 183.938 187.943 150.604C175.445 167.266 160.859 173.514 144.195 169.348C134.683 166.977 127.892 160.078 120.353 152.434C108.107 139.998 93.9275 125.602 62.9431 125.602Z" fill="#38BDF8"/>
        </g>
        <defs>
        <clipPath id="clip0_504_984">
        <rect width="250" height="250" fill="white" transform="translate(0.435547 0.602539)"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[240px] md:w-[160px] w-[120px]',
      imageStyleTop: 'top-1/2 -translate-y-[75%]',
      headerText: 'Tailwind',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A utility-first CSS framework with design responsive and customizable user interfaces with predefined classes, enabling faster and more flexible styling without writing custom CSS.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'fe-card',
    },
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="250" viewBox="0 0 250 250" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M115.495 102.866H134.826L139.629 96.2913V44.7995H110.696V96.2966L115.495 102.866Z" fill="#8A4182"/>
        <path d="M103.036 125.831L109.007 107.553L104.204 100.98L54.9524 85.0685L46.0129 112.427L95.2702 128.342L103.036 125.831Z" fill="#8A4182"/>
        <path d="M121.152 144.714L105.515 133.415L97.743 135.927L67.3052 177.587L90.7109 194.495L121.152 152.834V144.714Z" fill="#8A4182"/>
        <path d="M144.81 133.413L129.169 144.711L129.173 152.836L159.611 194.495L183.019 177.587L152.575 135.924L144.81 133.413Z" fill="#8A4182"/>
        <path d="M141.31 107.55L147.285 125.83L155.057 128.339L204.309 112.428L195.367 85.0673L146.113 100.982L141.31 107.55Z" fill="#8A4182"/>
        <path d="M125.167 0.10425C56.3569 0.10425 0.374512 55.761 0.374512 124.172C0.374512 192.608 56.3569 248.28 125.167 248.28C193.97 248.28 249.947 192.608 249.947 124.172C249.947 55.761 193.97 0.10425 125.167 0.10425ZM125.167 25.2261C180.117 25.2261 224.679 69.5199 224.679 124.172C224.679 178.842 180.117 223.155 125.167 223.155C70.198 223.155 25.6424 178.842 25.6424 124.172C25.6424 69.5199 70.198 25.2261 125.167 25.2261Z" fill="#8A4182"/>
        <path d="M200.747 151.749L163.308 139.652L165.783 132.069L203.223 144.166L200.747 151.749Z" fill="#8A4182"/>
        <path d="M152.997 91.9824L146.509 87.2967L169.647 55.6283L176.135 60.314L152.997 91.9824Z" fill="#8A4182"/>
        <path d="M97.7265 91.6943L74.592 60.0241L81.0805 55.3384L104.215 87.0068L97.7265 91.6943Z" fill="#8A4182"/>
        <path d="M49.4218 151.276L46.9451 143.693L84.381 131.601L86.8579 139.184L49.4218 151.276Z" fill="#8A4182"/>
        <path d="M120.906 203.28H128.924V164.135H120.906V203.28Z" fill="#8A4182"/>
        </svg>
      `),
      imageSize: 'lg:w-[240px] md:w-[160px] w-[120px]',
      imageStyleTop: 'top-1/2 -translate-y-[75%]',
      headerText: 'Jasmine',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A behavior-driven development (BDD) testing framework for JavaScript that enables developers to write readable and maintainable unit tests, focusing on simplicity and an expressive syntax for test scenarios.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'fe-card',
    },
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="250" viewBox="0 0 250 250" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_973)">
        <path d="M125 250C194.036 250 250 194.036 250 125C250 55.9644 194.036 0 125 0C55.9644 0 0 55.9644 0 125C0 194.036 55.9644 250 125 250Z" fill="#2F3241"/>
        <path d="M98.1465 70.01C72.751 65.385 52.6709 70.2258 44.668 84.0871C38.6963 94.4309 40.4034 108.145 48.8086 122.804C48.9746 123.108 49.1997 123.377 49.4707 123.593C49.7418 123.809 50.0532 123.969 50.3869 124.064C50.7206 124.158 51.0698 124.185 51.4139 124.142C51.7581 124.1 52.0903 123.989 52.3911 123.817C52.6919 123.644 52.9552 123.413 53.1656 123.138C53.3761 122.862 53.5293 122.547 53.6164 122.211C53.7035 121.876 53.7227 121.526 53.6729 121.183C53.623 120.84 53.5052 120.51 53.3262 120.213C45.7559 107.008 44.2823 95.1731 49.1787 86.6916C55.8272 75.177 73.7373 70.8586 97.2129 75.134C97.8875 75.2463 98.5792 75.0888 99.1387 74.6955C99.6981 74.3021 100.08 73.7045 100.203 73.0317C100.326 72.3589 100.179 71.6649 99.7938 71.0995C99.4091 70.5342 98.8174 70.1428 98.1465 70.01ZM62.0147 140.622C72.2832 151.906 85.6241 162.491 100.839 171.275C137.678 192.544 176.897 198.229 196.225 185.05C196.514 184.86 196.762 184.615 196.955 184.328C197.148 184.041 197.283 183.718 197.35 183.379C197.417 183.04 197.416 182.691 197.347 182.352C197.278 182.013 197.142 181.691 196.947 181.405C196.752 181.12 196.502 180.876 196.212 180.688C195.922 180.499 195.597 180.371 195.256 180.31C194.916 180.248 194.567 180.256 194.229 180.331C193.892 180.406 193.572 180.547 193.29 180.747C175.991 192.542 138.737 187.142 103.443 166.765C88.6836 158.243 75.7647 147.993 65.8672 137.116C65.6374 136.862 65.3597 136.655 65.0498 136.508C64.74 136.362 64.4042 136.277 64.0618 136.26C63.7193 136.244 63.3769 136.295 63.0542 136.411C62.7314 136.526 62.4348 136.705 62.1812 136.936C61.9276 137.166 61.7221 137.445 61.5764 137.755C61.4307 138.066 61.3478 138.402 61.3323 138.744C61.3168 139.087 61.3691 139.429 61.4862 139.751C61.6033 140.074 61.7829 140.37 62.0147 140.622Z" fill="#74B1BE"/>
        <path d="M190.059 137.454C206.687 117.81 212.493 98.0518 204.507 84.2197C198.631 74.041 186.208 68.667 169.697 68.4521C169.013 68.4532 168.357 68.7234 167.87 69.2045C167.383 69.6855 167.106 70.3387 167.097 71.0229C167.088 71.7071 167.349 72.3673 167.823 72.8608C168.297 73.3543 168.946 73.6414 169.63 73.6602C184.479 73.8535 195.182 78.4834 199.997 86.8242C206.63 98.3135 201.452 115.933 186.083 134.089C185.857 134.349 185.686 134.652 185.578 134.979C185.47 135.306 185.429 135.652 185.455 135.995C185.482 136.339 185.576 136.673 185.733 136.98C185.89 137.287 186.106 137.559 186.369 137.782C186.632 138.004 186.937 138.173 187.265 138.277C187.593 138.381 187.939 138.419 188.282 138.388C188.625 138.358 188.959 138.259 189.264 138.099C189.569 137.939 189.839 137.72 190.059 137.454ZM147.323 70.877C132.288 74.0986 116.284 80.3975 100.915 89.2705C62.8857 111.227 38.0781 143.603 41.5234 167.078C41.5694 167.42 41.6827 167.749 41.8567 168.046C42.0308 168.344 42.2622 168.604 42.5375 168.811C42.8128 169.019 43.1266 169.169 43.4605 169.255C43.7945 169.34 44.1421 169.358 44.4831 169.308C44.8242 169.258 45.1519 169.14 45.4472 168.963C45.7426 168.785 45.9998 168.551 46.2038 168.273C46.4079 167.995 46.5547 167.679 46.6359 167.344C46.7171 167.009 46.731 166.662 46.6768 166.321C43.6172 145.478 67.1328 114.789 103.52 93.7812C118.429 85.1728 133.925 79.0742 148.414 75.9697C148.753 75.9029 149.076 75.7692 149.362 75.5765C149.649 75.3838 149.895 75.136 150.085 74.8474C150.275 74.5588 150.406 74.2352 150.47 73.8955C150.534 73.5558 150.529 73.2069 150.457 72.8689C150.385 72.531 150.246 72.2108 150.048 71.9271C149.851 71.6434 149.599 71.4018 149.308 71.2164C149.016 71.031 148.69 70.9055 148.349 70.8472C148.009 70.7889 147.66 70.799 147.323 70.877Z" fill="#74B1BE"/>
        <path d="M85.7129 183.353C94.4082 207.63 108.632 222.578 124.626 222.578C136.291 222.578 147.083 214.626 155.499 200.627C155.681 200.334 155.803 200.007 155.858 199.666C155.913 199.326 155.899 198.977 155.818 198.642C155.737 198.306 155.59 197.99 155.386 197.712C155.182 197.433 154.924 197.198 154.629 197.021C154.333 196.843 154.004 196.725 153.663 196.676C153.321 196.626 152.973 196.644 152.639 196.73C152.304 196.816 151.99 196.967 151.715 197.176C151.44 197.384 151.209 197.645 151.035 197.943C143.472 210.524 134.182 217.369 124.626 217.369C111.34 217.369 98.6533 204.037 90.6172 181.598C90.5071 181.269 90.3326 180.966 90.1038 180.706C89.8751 180.445 89.5967 180.233 89.285 180.082C88.9732 179.931 88.6345 179.843 88.2885 179.824C87.9425 179.806 87.5962 179.856 87.2699 179.973C86.9437 180.09 86.644 180.27 86.3885 180.504C86.133 180.738 85.9267 181.021 85.7818 181.336C85.6369 181.651 85.5562 181.991 85.5446 182.337C85.5329 182.684 85.5905 183.029 85.7139 183.353H85.7129ZM165.129 178.604C169.631 164.221 172.048 147.629 172.048 130.339C172.048 87.1954 156.947 50.004 135.439 40.4542C134.811 40.191 134.105 40.1845 133.472 40.436C132.839 40.6875 132.329 41.177 132.053 41.7996C131.776 42.4222 131.755 43.1283 131.993 43.7665C132.231 44.4048 132.71 44.9244 133.326 45.2139C152.509 53.7325 166.839 89.0284 166.839 130.339C166.839 147.113 164.498 163.181 160.159 177.048C160.051 177.376 160.01 177.722 160.037 178.066C160.064 178.41 160.159 178.745 160.317 179.052C160.475 179.359 160.692 179.632 160.956 179.854C161.22 180.076 161.526 180.244 161.856 180.347C162.185 180.45 162.532 180.487 162.875 180.455C163.219 180.422 163.553 180.322 163.857 180.16C164.162 179.998 164.431 179.777 164.65 179.51C164.868 179.242 165.032 178.934 165.13 178.604H165.129ZM214.176 176.053C214.176 169.169 208.596 163.589 201.712 163.589C194.828 163.589 189.248 169.169 189.248 176.053C189.248 182.937 194.828 188.517 201.712 188.517C208.596 188.517 214.176 182.937 214.176 176.053ZM208.968 176.053C208.968 177.006 208.78 177.949 208.415 178.829C208.051 179.71 207.516 180.51 206.843 181.183C206.169 181.857 205.369 182.392 204.489 182.756C203.608 183.121 202.665 183.309 201.712 183.309C200.759 183.309 199.816 183.121 198.935 182.756C198.055 182.392 197.255 181.857 196.581 181.183C195.907 180.51 195.373 179.71 195.008 178.829C194.644 177.949 194.456 177.006 194.456 176.053C194.456 174.128 195.22 172.283 196.581 170.922C197.942 169.561 199.788 168.797 201.712 168.797C203.636 168.797 205.482 169.561 206.843 170.922C208.203 172.283 208.968 174.128 208.968 176.053ZM47.3604 188.517C54.2451 188.517 59.8252 182.937 59.8252 176.053C59.8252 169.169 54.2441 163.589 47.3604 163.589C40.4775 163.589 34.8965 169.169 34.8965 176.053C34.8965 182.937 40.4775 188.517 47.3604 188.517ZM47.3604 183.309C45.436 183.309 43.5904 182.544 42.2297 181.183C40.8689 179.823 40.1045 177.977 40.1045 176.053C40.1045 174.128 40.8689 172.283 42.2297 170.922C43.5904 169.561 45.436 168.797 47.3604 168.797C49.2847 168.797 51.1303 169.561 52.491 170.922C53.8518 172.283 54.6162 174.128 54.6162 176.053C54.6162 177.977 53.8518 179.823 52.491 181.183C51.1303 182.544 49.2847 183.309 47.3604 183.309Z" fill="#74B1BE"/>
        <path d="M124.626 53.168C131.51 53.168 137.09 47.5879 137.09 40.7041C137.09 33.8203 131.51 28.2402 124.626 28.2402C117.742 28.2402 112.162 33.8203 112.162 40.7041C112.162 47.5879 117.742 53.168 124.626 53.168ZM124.626 47.96C122.702 47.96 120.856 47.1955 119.495 45.8348C118.135 44.474 117.37 42.6285 117.37 40.7041C117.37 38.7797 118.135 36.9342 119.495 35.5734C120.856 34.2127 122.702 33.4482 124.626 33.4482C126.55 33.4482 128.396 34.2127 129.757 35.5734C131.117 36.9342 131.882 38.7797 131.882 40.7041C131.882 42.6285 131.117 44.474 129.757 45.8348C128.396 47.1955 126.55 47.96 124.626 47.96ZM126.529 139.153C121.661 140.205 116.865 137.111 115.812 132.243C115.307 129.905 115.751 127.463 117.047 125.453C118.343 123.443 120.384 122.03 122.722 121.524C127.59 120.473 132.386 123.566 133.44 128.435C134.492 133.303 131.398 138.1 126.529 139.153Z" fill="#74B1BE"/>
        </g>
        <defs>
        <clipPath id="clip0_504_973">
        <rect width="250" height="250" fill="white"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[240px] md:w-[160px] w-[120px]',
      imageStyleTop: 'top-1/2 -translate-y-[75%]',
      headerText: 'ElectronJS',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A framework for building cross-platform desktop applications using web technologies like HTML, CSS, and JavaScript, combines Chromium and Node.js to create native-like experiences for Windows, macOS, and Linux.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'fe-card',
    },
    {
      image: '',
      isSvg: this.sanitizer.bypassSecurityTrustHtml(`<svg width="250" height="250" viewBox="0 0 250 250" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_981)">
        <path d="M125.148 0.00115781C145.438 0.00115781 164.544 4.74166 182.464 13.9241L184.834 15.109L182.761 16.7381C177.725 20.7369 173.726 25.9206 171.209 31.8447L170.468 33.4739L168.987 32.7334C155.213 26.2168 140.551 22.8104 125.296 22.8104C68.8685 22.8104 23.1043 68.7227 23.1043 125.002C23.1043 181.282 68.7204 227.194 125.148 227.194C181.576 227.194 227.34 181.282 227.34 125.002C227.34 111.525 224.822 98.3436 219.491 85.9028L218.75 84.2737L220.379 83.5331C226.451 81.3116 231.783 77.609 236.078 72.8696L237.707 70.7962L238.744 73.1658C246.297 89.6054 250 107.082 250 124.706C250 193.575 193.868 249.706 125 249.706C56.1315 249.706 0 193.575 0 124.706C0 55.8376 56.1315 -0.293884 125.148 0.00115781ZM125.148 68.1303C156.398 68.1303 182.02 93.6042 182.168 125.15C182.168 156.697 156.694 182.171 125.148 182.171C93.6019 182.171 68.128 156.697 68.128 125.15C68.128 93.6042 93.75 68.1303 125.148 68.1303ZM206.754 21.0331C221.15 21.0331 232.82 32.7034 232.82 47.0995C232.82 61.4955 221.15 73.1658 206.754 73.1658C192.358 73.1658 180.687 61.4955 180.687 47.0995C180.687 32.7034 192.358 21.0331 206.754 21.0331Z" fill="#3880FF"/>
        </g>
        <defs>
        <clipPath id="clip0_504_981">
        <rect width="250" height="250" fill="white"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[240px] md:w-[160px] w-[120px]',
      imageStyleTop: 'top-1/2 -translate-y-[75%]',
      headerText: 'Ionic',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A hybrid mobile app development framework that allows developers to build cross-platform mobile applications using web technologies like HTML, CSS, and JavaScript.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'fe-card',
    },
  ];

  beCard = [
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="154" viewBox="0 0 250 154" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_1000)">
        <path d="M123.589 153.218C122.743 153.218 121.953 152.992 121.219 152.597L113.713 148.139C112.585 147.518 113.149 147.292 113.488 147.179C115.011 146.672 115.293 146.559 116.874 145.656C117.043 145.543 117.269 145.599 117.438 145.712L123.194 149.155C123.42 149.267 123.702 149.267 123.871 149.155L146.388 136.118C146.614 136.006 146.727 135.78 146.727 135.498V109.482C146.727 109.2 146.614 108.974 146.388 108.861L123.871 95.8815C123.646 95.7686 123.363 95.7686 123.194 95.8815L100.677 108.861C100.451 108.974 100.339 109.256 100.339 109.482V135.498C100.339 135.723 100.451 136.006 100.677 136.118L106.828 139.674C110.158 141.367 112.246 139.392 112.246 137.416V111.739C112.246 111.401 112.528 111.062 112.923 111.062H115.801C116.14 111.062 116.479 111.344 116.479 111.739V137.416C116.479 141.875 114.052 144.471 109.819 144.471C108.521 144.471 107.506 144.471 104.628 143.06L98.702 139.674C97.2347 138.827 96.3318 137.247 96.3318 135.554V109.538C96.3318 107.845 97.2347 106.265 98.702 105.419L121.219 92.3826C122.63 91.5925 124.548 91.5925 125.959 92.3826L148.476 105.419C149.944 106.265 150.846 107.845 150.846 109.538V135.554C150.846 137.247 149.944 138.827 148.476 139.674L125.959 152.71C125.226 153.049 124.379 153.218 123.589 153.218ZM130.53 135.328C120.655 135.328 118.623 130.814 118.623 126.976C118.623 126.638 118.905 126.299 119.3 126.299H122.235C122.573 126.299 122.855 126.525 122.855 126.863C123.307 129.854 124.605 131.322 130.587 131.322C135.327 131.322 137.359 130.249 137.359 127.71C137.359 126.243 136.795 125.17 129.402 124.437C123.251 123.816 119.413 122.462 119.413 117.552C119.413 112.981 123.251 110.272 129.684 110.272C136.907 110.272 140.463 112.755 140.914 118.173C140.914 118.342 140.858 118.511 140.745 118.681C140.632 118.793 140.463 118.906 140.293 118.906H137.359C137.077 118.906 136.795 118.681 136.738 118.398C136.061 115.295 134.311 114.279 129.684 114.279C124.492 114.279 123.871 116.085 123.871 117.439C123.871 119.076 124.605 119.583 131.603 120.486C138.544 121.389 141.817 122.687 141.817 127.541C141.761 132.507 137.697 135.328 130.53 135.328Z" fill="#539E43"/>
        <path d="M53.7245 51.4691C53.7245 50.4533 53.1602 49.494 52.2573 48.9861L28.3295 35.2163C27.9345 34.9906 27.483 34.8777 27.0315 34.8213H26.8058C26.3543 34.8213 25.9029 34.9906 25.5078 35.2163L1.58006 48.9861C0.677127 49.494 0.112793 50.4533 0.112793 51.4691L0.169226 88.4895C0.169226 88.9974 0.451393 89.5053 0.902861 89.731C1.35433 90.0132 1.91866 90.0132 2.3137 89.731L16.5349 81.6046C17.4378 81.0967 18.0022 80.1373 18.0022 79.1215V61.7965C18.0022 60.7807 18.5665 59.8213 19.4695 59.3134L25.5078 55.8145C25.9593 55.5323 26.4672 55.4195 26.9751 55.4195C27.483 55.4195 27.9909 55.5323 28.3859 55.8145L34.4243 59.3134C35.3272 59.8213 35.8916 60.7807 35.8916 61.7965V79.1215C35.8916 80.1373 36.4559 81.0967 37.3588 81.6046L51.5801 89.731C52.0315 90.0132 52.5959 90.0132 53.0473 89.731C53.4988 89.5053 53.781 88.9974 53.781 88.4895L53.7245 51.4691Z" fill="#333333"/>
        <path d="M168.736 0.509144C168.284 0.28341 167.72 0.28341 167.325 0.509144C166.873 0.791311 166.591 1.24278 166.591 1.75068V38.4324C166.591 38.771 166.422 39.1096 166.083 39.3353C165.745 39.5046 165.406 39.5046 165.068 39.3353L159.086 35.8929C158.183 35.385 157.11 35.385 156.208 35.8929L132.28 49.7191C131.377 50.227 130.812 51.1863 130.812 52.2021V79.7981C130.812 80.8139 131.377 81.7732 132.28 82.2812L156.208 96.1073C157.11 96.6152 158.183 96.6152 159.086 96.1073L183.013 82.2812C183.916 81.7732 184.481 80.8139 184.481 79.7981V11.0058C184.481 9.93352 183.916 8.97416 183.013 8.46625L168.736 0.509144ZM166.535 70.7123C166.535 70.9945 166.422 71.2202 166.196 71.3331L158.013 76.0735C157.788 76.1863 157.505 76.1863 157.28 76.0735L149.097 71.3331C148.871 71.2202 148.758 70.938 148.758 70.7123V61.2315C148.758 60.9493 148.871 60.7236 149.097 60.6107L157.28 55.8703C157.505 55.7575 157.788 55.7575 158.013 55.8703L166.196 60.6107C166.422 60.7236 166.535 61.0058 166.535 61.2315V70.7123Z" fill="#333333"/>
        <path d="M248.363 61.0052C249.266 60.4973 249.774 59.538 249.774 58.5222V51.8066C249.774 50.7908 249.21 49.8314 248.363 49.3235L224.605 35.5538C223.702 35.0459 222.63 35.0459 221.727 35.5538L197.799 49.38C196.896 49.8879 196.332 50.8472 196.332 51.863V79.459C196.332 80.4748 196.896 81.4341 197.799 81.942L221.558 95.4861C222.46 95.994 223.533 95.994 224.379 95.4861L238.77 87.4725C239.221 87.2468 239.503 86.7389 239.503 86.231C239.503 85.7231 239.221 85.2152 238.77 84.9894L214.729 71.1633C214.278 70.8811 213.995 70.4296 213.995 69.9217V61.2874C213.995 60.7795 214.278 60.2716 214.729 60.0459L222.235 55.7569C222.686 55.4748 223.251 55.4748 223.702 55.7569L231.208 60.0459C231.659 60.328 231.941 60.7795 231.941 61.2874V68.0594C231.941 68.5673 232.223 69.0752 232.675 69.301C233.126 69.5831 233.691 69.5831 234.142 69.301L248.363 61.0052Z" fill="#333333"/>
        <path d="M222.799 59.7077C222.968 59.5948 223.194 59.5948 223.363 59.7077L227.935 62.3601C228.104 62.4729 228.217 62.6422 228.217 62.868V68.1727C228.217 68.3984 228.104 68.5677 227.935 68.6806L223.363 71.333C223.194 71.4458 222.968 71.4458 222.799 71.333L218.228 68.6806C218.059 68.5677 217.946 68.3984 217.946 68.1727V62.868C217.946 62.6422 218.059 62.4729 218.228 62.3601L222.799 59.7077Z" fill="#539E43"/>
        <path d="M93.7359 35.6671C92.8329 35.1592 91.7607 35.1592 90.8578 35.6671L67.0993 49.3804C66.1964 49.8883 65.6885 50.8476 65.6885 51.8634V79.3465C65.6885 80.3623 66.2528 81.3217 67.0993 81.8296L90.8578 95.5429C91.7607 96.0508 92.8329 96.0508 93.7359 95.5429L117.494 81.8296C118.397 81.3217 118.905 80.3623 118.905 79.3465V51.8634C118.905 50.8476 118.341 49.8883 117.494 49.3804L93.7359 35.6671Z" fill="url(#paint0_linear_504_1000)"/>
        <mask id="mask0_504_1000" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="65" y="35" width="54" height="61">
        <path d="M93.7359 35.6671C92.8329 35.1592 91.7607 35.1592 90.8578 35.6671L67.0993 49.3804C66.1964 49.8883 65.6885 50.8476 65.6885 51.8634V79.3465C65.6885 80.3623 66.2528 81.3217 67.0993 81.8296L90.8578 95.5429C91.7607 96.0508 92.8329 96.0508 93.7359 95.5429L117.494 81.8296C118.397 81.3217 118.905 80.3623 118.905 79.3465V51.8634C118.905 50.8476 118.341 49.8883 117.494 49.3804L93.7359 35.6671Z" fill="white"/>
        </mask>
        <g mask="url(#mask0_504_1000)">
        <path d="M117.551 49.3803L93.6794 35.6669C93.4536 35.5541 93.1715 35.4412 92.9457 35.3848L66.1963 81.2087C66.422 81.4909 66.7042 81.7166 66.9864 81.8859L90.8577 95.5992C91.5349 95.9942 92.325 96.1071 93.0586 95.8814L118.171 49.9446C118.002 49.7189 117.776 49.5496 117.551 49.3803Z" fill="url(#paint1_linear_504_1000)"/>
        </g>
        <mask id="mask1_504_1000" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="65" y="35" width="54" height="61">
        <path d="M93.7359 35.6671C92.8329 35.1592 91.7607 35.1592 90.8578 35.6671L67.0993 49.3804C66.1964 49.8883 65.6885 50.8476 65.6885 51.8634V79.3465C65.6885 80.3623 66.2528 81.3217 67.0993 81.8296L90.8578 95.5429C91.7607 96.0508 92.8329 96.0508 93.7359 95.5429L117.494 81.8296C118.397 81.3217 118.905 80.3623 118.905 79.3465V51.8634C118.905 50.8476 118.341 49.8883 117.494 49.3804L93.7359 35.6671Z" fill="white"/>
        </mask>
        <g mask="url(#mask1_504_1000)">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M117.607 81.8298C118.284 81.4348 118.792 80.7576 119.018 80.024L92.833 35.3287C92.1558 35.2158 91.4222 35.2723 90.8014 35.6673L67.0994 49.3242L92.6637 95.9382C93.0023 95.8817 93.3973 95.7689 93.7359 95.5996L117.607 81.8298Z" fill="url(#paint2_linear_504_1000)"/>
        <path fill-rule="evenodd" clip-rule="evenodd" d="M117.607 81.8291L93.7922 95.5424C93.4536 95.7117 93.115 95.8246 92.72 95.881L93.1714 96.7275L119.582 81.4341V81.0955L118.905 79.9668C118.792 80.7569 118.284 81.4341 117.607 81.8291Z" fill="url(#paint3_linear_504_1000)"/>
        <path fill-rule="evenodd" clip-rule="evenodd" d="M117.607 81.8291L93.7922 95.5424C93.4536 95.7117 93.115 95.8246 92.72 95.881L93.1714 96.7275L119.582 81.4341V81.0955L118.905 79.9668C118.792 80.7569 118.284 81.4341 117.607 81.8291Z" fill="url(#paint4_linear_504_1000)"/>
        </g>
        </g>
        <defs>
        <linearGradient id="paint0_linear_504_1000" x1="3694.45" y1="1095.65" x2="1090.2" y2="5187.53" gradientUnits="userSpaceOnUse">
        <stop stop-color="#41873F"/>
        <stop offset="0.3288" stop-color="#418B3D"/>
        <stop offset="0.6352" stop-color="#419637"/>
        <stop offset="0.9319" stop-color="#3FA92D"/>
        <stop offset="1" stop-color="#3FAE2A"/>
        </linearGradient>
        <linearGradient id="paint1_linear_504_1000" x1="2315.5" y1="3379.26" x2="8837.44" y2="-164.099" gradientUnits="userSpaceOnUse">
        <stop offset="0.1376" stop-color="#41873F"/>
        <stop offset="0.4032" stop-color="#54A044"/>
        <stop offset="0.7136" stop-color="#66B848"/>
        <stop offset="0.9081" stop-color="#6CC04A"/>
        </linearGradient>
        <linearGradient id="paint2_linear_504_1000" x1="-160.762" y1="3068.15" x2="5336.81" y2="3068.15" gradientUnits="userSpaceOnUse">
        <stop offset="0.0919165" stop-color="#6CC04A"/>
        <stop offset="0.2864" stop-color="#66B848"/>
        <stop offset="0.5968" stop-color="#54A044"/>
        <stop offset="0.8624" stop-color="#41873F"/>
        </linearGradient>
        <linearGradient id="paint3_linear_504_1000" x1="-2697.22" y1="922.619" x2="2800.36" y2="922.619" gradientUnits="userSpaceOnUse">
        <stop offset="0.0919165" stop-color="#6CC04A"/>
        <stop offset="0.2864" stop-color="#66B848"/>
        <stop offset="0.5968" stop-color="#54A044"/>
        <stop offset="0.8624" stop-color="#41873F"/>
        </linearGradient>
        <linearGradient id="paint4_linear_504_1000" x1="3601.29" y1="-3457.71" x2="2208.54" y2="3840.28" gradientUnits="userSpaceOnUse">
        <stop stop-color="#41873F"/>
        <stop offset="0.3288" stop-color="#418B3D"/>
        <stop offset="0.6352" stop-color="#419637"/>
        <stop offset="0.9319" stop-color="#3FA92D"/>
        <stop offset="1" stop-color="#3FAE2A"/>
        </linearGradient>
        <clipPath id="clip0_504_1000">
        <rect width="250" height="153.32" fill="white" transform="translate(0 0.339844)"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[360px] md:w-[300px] w-[180px]',
      imageStyleTop: 'top-1/2 -translate-y-[90%]',
      headerText: 'NodeJS',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        "A JavaScript runtime built on Chrome's V8 engine, enabling developers to build fast, scalable server-side applications using an event-driven, non-blocking I/O model.",
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'be-card',
    },
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="64" viewBox="0 0 250 64" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_1049)">
        <path d="M18.6758 6.96507C16.2288 4.06183 14.1217 1.11322 13.6912 0.500819C13.6459 0.455456 13.5779 0.455456 13.5326 0.500819C13.1021 1.11322 10.995 4.06183 8.54805 6.96507C-12.4551 33.752 11.856 51.8293 11.856 51.8293L12.0599 51.9654C12.2412 54.7551 12.6943 58.7699 12.6943 58.7699H13.6006H14.5069C14.5069 58.7699 14.96 54.7778 15.1413 51.9654L15.3452 51.8066C15.3678 51.8293 39.679 33.752 18.6758 6.96507ZM13.6006 51.4437C13.6006 51.4437 12.5131 50.5138 12.2185 50.0374V49.9922L13.5326 20.8235C13.5326 20.7328 13.6686 20.7328 13.6686 20.8235L14.9827 49.9922V50.0374C14.6881 50.5138 13.6006 51.4437 13.6006 51.4437Z" fill="#00684A"/>
        <path d="M59.0974 45.2915L48.9668 20.7251L48.9441 20.6572H41.062V22.3085H42.3341C42.7202 22.3085 43.0836 22.4669 43.3563 22.7384C43.6287 23.0098 43.7651 23.3718 43.7651 23.7564L43.538 48.481C43.538 49.25 42.9021 49.8834 42.1297 49.9061L40.835 49.9288V51.5574H48.5126V49.9288L47.7174 49.9061C46.9452 49.8834 46.3091 49.25 46.3091 48.481V25.1815L57.3486 51.5574C57.5074 51.9419 57.8708 52.1908 58.2798 52.1908C58.6886 52.1908 59.0521 51.9419 59.2111 51.5574L70.0006 25.7695L70.1596 48.481C70.1596 49.2727 69.5235 49.9061 68.7286 49.9288H67.9107V51.5574H76.9057V49.9288H75.6791C74.9069 49.9288 74.2708 49.2727 74.2481 48.5036L74.18 23.7788C74.18 22.9872 74.8159 22.3538 75.5884 22.3312L76.9057 22.3085V20.6572H69.2281L59.0974 45.2915Z" fill="#00684A"/>
        <path d="M129.734 49.4991C129.484 49.2504 129.347 48.9115 129.347 48.505V36.394C129.347 34.0893 128.664 32.2817 127.298 30.9938C125.954 29.706 124.087 29.0508 121.764 29.0508C118.507 29.0508 115.934 30.3614 114.134 32.9371C114.112 32.9823 114.043 33.005 113.975 33.005C113.907 33.005 113.861 32.9596 113.861 32.892L113.018 29.6608H111.607L107.986 31.7171V32.8466H108.919C109.352 32.8466 109.716 32.9596 109.967 33.1855C110.217 33.4115 110.354 33.7504 110.354 34.225V48.4823C110.354 48.889 110.217 49.228 109.967 49.4764C109.716 49.725 109.375 49.8604 108.965 49.8604H108.054V51.5099H116.389V49.8604H115.478C115.068 49.8604 114.727 49.725 114.476 49.4764C114.226 49.228 114.089 48.889 114.089 48.4823V39.0376C114.089 37.84 114.362 36.6427 114.863 35.4677C115.387 34.3153 116.161 33.3439 117.186 32.5982C118.211 31.8525 119.441 31.4911 120.853 31.4911C122.447 31.4911 123.654 31.9882 124.405 32.9823C125.157 33.9764 125.544 35.2643 125.544 36.8008V48.4596C125.544 48.8663 125.407 49.2053 125.157 49.4539C124.906 49.7023 124.565 49.838 124.155 49.838H123.244V51.4873H131.579V49.838H130.668C130.327 49.8831 130.008 49.7475 129.734 49.4991Z" fill="#00684A"/>
        <path d="M205.886 22.5202C203.582 21.2934 201.007 20.6572 198.229 20.6572H187.386V22.3157H188.448C188.855 22.3157 189.216 22.4748 189.577 22.8383C189.916 23.179 190.097 23.5653 190.097 23.9742V48.4202C190.097 48.829 189.916 49.2153 189.577 49.556C189.239 49.8968 188.855 50.0785 188.448 50.0785H187.386V51.7371H198.229C201.007 51.7371 203.582 51.101 205.886 49.8741C208.19 48.6472 210.065 46.8296 211.42 44.5125C212.775 42.1951 213.475 39.4006 213.475 36.2198C213.475 33.0393 212.775 30.2675 211.42 27.9274C210.042 25.5647 208.19 23.7471 205.886 22.5202ZM209.116 36.1745C209.116 39.0826 208.597 41.5361 207.58 43.5127C206.564 45.4893 205.208 46.966 203.537 47.9202C201.865 48.8746 200.013 49.3516 198.025 49.3516H195.834C195.428 49.3516 195.066 49.1926 194.705 48.829C194.366 48.4882 194.185 48.1021 194.185 47.6931V24.6332C194.185 24.2242 194.344 23.8607 194.705 23.4971C195.044 23.1563 195.428 22.9746 195.834 22.9746H198.025C200.013 22.9746 201.865 23.4517 203.537 24.4059C205.208 25.36 206.564 26.8369 207.58 28.8135C208.597 30.7899 209.116 33.2663 209.116 36.1745Z" fill="#00684A"/>
        <path d="M239.104 37.833C238.101 36.6742 236.166 35.6974 233.891 35.1747C237.033 33.6071 238.648 31.4034 238.648 28.5635C238.648 27.0186 238.24 25.6327 237.418 24.4512C236.599 23.27 235.438 22.3157 233.959 21.6569C232.477 20.998 230.746 20.6572 228.789 20.6572H216.516V22.3157H217.495C217.905 22.3157 218.269 22.4748 218.634 22.8383C218.975 23.179 219.157 23.5653 219.157 23.9742V48.4202C219.157 48.829 218.975 49.2153 218.634 49.556C218.292 49.8968 217.905 50.0785 217.495 50.0785H216.425V51.7371H229.746C231.772 51.7371 233.662 51.3963 235.37 50.7146C237.078 50.0331 238.444 49.0336 239.424 47.7158C240.424 46.3982 240.926 44.785 240.926 42.922C240.903 40.9227 240.311 39.2187 239.104 37.833ZM223.825 48.8516C223.484 48.5109 223.301 48.1248 223.301 47.7158V36.7425H229.633C231.863 36.7425 233.571 37.3104 234.755 38.4462C235.939 39.5824 236.531 41.059 236.531 42.8766C236.531 43.9671 236.257 45.0349 235.758 46.0118C235.234 47.0116 234.458 47.8067 233.412 48.4202C232.387 49.0336 231.112 49.3516 229.633 49.3516H224.964C224.554 49.3743 224.19 49.1926 223.825 48.8516ZM223.324 34.4022V24.6559C223.324 24.2468 223.484 23.8834 223.848 23.5197C224.19 23.179 224.577 22.9973 224.987 22.9973H227.992C230.154 22.9973 231.749 23.5427 232.752 24.5876C233.752 25.6554 234.254 27.0186 234.254 28.6999C234.254 30.4265 233.775 31.8124 232.843 32.8575C231.908 33.8798 230.497 34.4022 228.63 34.4022H223.324Z" fill="#00684A"/>
        <path d="M98.0034 30.4997C96.2633 29.549 94.3201 29.0508 92.2186 29.0508C90.1172 29.0508 88.1513 29.5263 86.4339 30.4997C84.6939 31.4507 83.3155 32.8319 82.2987 34.5753C81.2819 36.3187 80.7622 38.3566 80.7622 40.6207C80.7622 42.8847 81.2819 44.9226 82.2987 46.666C83.3155 48.4094 84.6939 49.7906 86.4339 50.7416C88.174 51.6923 90.1172 52.1905 92.2186 52.1905C94.3201 52.1905 96.286 51.715 98.0034 50.7416C99.7434 49.7906 101.122 48.4094 102.139 46.666C103.155 44.9226 103.675 42.8847 103.675 40.6207C103.675 38.3566 103.155 36.3187 102.139 34.5753C101.122 32.8319 99.7434 31.4734 98.0034 30.4997ZM99.6755 40.6207C99.6755 43.4056 98.9977 45.6697 97.6417 47.2999C96.3087 48.9301 94.4784 49.7679 92.2186 49.7679C89.9591 49.7679 88.1286 48.9301 86.7956 47.2999C85.4396 45.6697 84.7618 43.4056 84.7618 40.6207C84.7618 37.8357 85.4396 35.5717 86.7956 33.9414C88.1286 32.3112 89.9591 31.4734 92.2186 31.4734C94.4784 31.4734 96.3087 32.3112 97.6417 33.9414C98.9977 35.5941 99.6755 37.8357 99.6755 40.6207Z" fill="#00684A"/>
        <path d="M178.085 30.4997C176.345 29.549 174.402 29.0508 172.3 29.0508C170.199 29.0508 168.233 29.5263 166.516 30.4997C164.776 31.4507 163.397 32.8319 162.381 34.5753C161.364 36.3187 160.844 38.3566 160.844 40.6207C160.844 42.8847 161.364 44.9226 162.381 46.666C163.397 48.4094 164.776 49.7906 166.516 50.7416C168.256 51.6923 170.199 52.1905 172.3 52.1905C174.402 52.1905 176.368 51.715 178.085 50.7416C179.825 49.7906 181.204 48.4094 182.22 46.666C183.237 44.9226 183.757 42.8847 183.757 40.6207C183.757 38.3566 183.237 36.3187 182.22 34.5753C181.204 32.8319 179.802 31.4734 178.085 30.4997ZM179.757 40.6207C179.757 43.4056 179.079 45.6697 177.724 47.2999C176.39 48.9301 174.56 49.7679 172.3 49.7679C170.041 49.7679 168.21 48.9301 166.877 47.2999C165.521 45.6697 164.844 43.4056 164.844 40.6207C164.844 37.813 165.521 35.5717 166.877 33.9414C168.21 32.3112 170.041 31.4734 172.3 31.4734C174.56 31.4734 176.39 32.3112 177.724 33.9414C179.057 35.5941 179.757 37.8357 179.757 40.6207Z" fill="#00684A"/>
        <path d="M145.789 29.0508C143.969 29.0508 142.308 29.4374 140.806 30.2107C139.303 30.9841 138.12 32.0306 137.278 33.3725C136.436 34.6917 136.004 36.1703 136.004 37.7398C136.004 39.1499 136.322 40.4464 136.982 41.6066C137.619 42.7212 138.484 43.6535 139.577 44.4269L136.322 48.8398C135.913 49.3856 135.867 50.1134 136.163 50.7048C136.482 51.3189 137.073 51.683 137.756 51.683H138.689C137.779 52.2972 137.051 53.0249 136.55 53.8893C135.958 54.8675 135.662 55.8908 135.662 56.9371C135.662 58.8933 136.527 60.5084 138.234 61.7139C139.918 62.9194 142.285 63.5335 145.266 63.5335C147.337 63.5335 149.317 63.1923 151.114 62.5326C152.935 61.8732 154.414 60.8949 155.507 59.6213C156.622 58.3475 157.191 56.8008 157.191 55.0265C157.191 53.1615 156.508 51.8421 154.915 50.5685C153.55 49.4993 151.41 48.9308 148.748 48.9308H139.645C139.622 48.9308 139.599 48.9079 139.599 48.9079C139.599 48.9079 139.577 48.8625 139.599 48.8398L141.966 45.6554C142.603 45.951 143.195 46.1329 143.718 46.2466C144.264 46.3604 144.879 46.4058 145.562 46.4058C147.473 46.4058 149.203 46.0192 150.705 45.2459C152.207 44.4725 153.413 43.4262 154.278 42.0841C155.142 40.7649 155.575 39.2865 155.575 37.7171C155.575 36.0338 154.756 32.963 152.525 31.3936C152.525 31.3709 152.548 31.3709 152.548 31.3709L157.441 31.9167V29.6649H149.612C148.384 29.2554 147.109 29.0508 145.789 29.0508ZM148.52 43.267C147.655 43.7218 146.722 43.9721 145.789 43.9721C144.265 43.9721 142.922 43.4262 141.784 42.357C140.646 41.2881 140.077 39.7187 140.077 37.7171C140.077 35.7153 140.646 34.1458 141.784 33.0769C142.922 32.0077 144.265 31.4619 145.789 31.4619C146.745 31.4619 147.655 31.6894 148.52 32.1669C149.385 32.6218 150.09 33.3271 150.659 34.2595C151.205 35.1921 151.501 36.3523 151.501 37.7171C151.501 39.1045 151.228 40.2645 150.659 41.1744C150.113 42.1068 149.385 42.8121 148.52 43.267ZM142.353 51.6601H148.52C150.227 51.6601 151.319 52.0013 152.048 52.7293C152.776 53.4571 153.14 54.4351 153.14 55.5726C153.14 57.2329 152.48 58.5977 151.16 59.6213C149.84 60.6449 148.065 61.1681 145.88 61.1681C143.969 61.1681 142.376 60.7359 141.215 59.9169C140.054 59.0982 139.463 57.8471 139.463 56.255C139.463 55.254 139.736 54.3214 140.282 53.5027C140.828 52.6837 141.488 52.0923 142.353 51.6601Z" fill="#00684A"/>
        <path d="M245.542 51.3574C245.093 51.1117 244.755 50.7544 244.485 50.3302C244.238 49.8837 244.102 49.4148 244.102 48.9012C244.102 48.3876 244.238 47.8964 244.485 47.4722C244.732 47.0255 245.093 46.6907 245.542 46.445C245.994 46.1995 246.488 46.0654 247.051 46.0654C247.613 46.0654 248.108 46.1995 248.559 46.445C249.009 46.6907 249.347 47.048 249.617 47.4722C249.864 47.9187 250 48.3876 250 48.9012C250 49.4148 249.864 49.9059 249.617 50.3302C249.369 50.7769 249.009 51.1117 248.559 51.3574C248.108 51.6029 247.613 51.7369 247.051 51.7369C246.511 51.7369 245.994 51.6029 245.542 51.3574ZM248.312 51.0223C248.693 50.8216 248.965 50.5089 249.19 50.1516C249.392 49.7721 249.505 49.3476 249.505 48.8789C249.505 48.41 249.392 47.9858 249.19 47.606C248.986 47.2265 248.693 46.9363 248.312 46.7353C247.929 46.5344 247.523 46.4227 247.051 46.4227C246.579 46.4227 246.173 46.5344 245.789 46.7353C245.408 46.9363 245.136 47.249 244.911 47.606C244.71 47.9858 244.596 48.41 244.596 48.8789C244.596 49.3476 244.71 49.7721 244.911 50.1516C245.116 50.5312 245.408 50.8216 245.789 51.0223C246.173 51.2233 246.579 51.3349 247.051 51.3349C247.523 51.3349 247.951 51.2233 248.312 51.0223ZM245.835 50.241V50.04L245.88 50.0176H246.016C246.059 50.0176 246.105 49.9953 246.127 49.9729C246.173 49.9284 246.173 49.9059 246.173 49.8613V47.7848C246.173 47.7401 246.15 47.6954 246.127 47.6732C246.082 47.6285 246.059 47.6285 246.016 47.6285H245.88L245.835 47.606V47.4053L245.88 47.3828H247.051C247.389 47.3828 247.636 47.4497 247.838 47.606C248.042 47.7623 248.131 47.9633 248.131 48.2313C248.131 48.4323 248.065 48.6333 247.906 48.7671C247.749 48.9234 247.568 49.0128 247.343 49.0353L247.613 49.1244L248.131 49.9506C248.176 50.0176 248.221 50.04 248.289 50.04H248.423L248.446 50.0623V50.2633L248.423 50.2855H247.727L247.681 50.2633L246.96 49.0575H246.781V49.8613C246.781 49.9059 246.803 49.9506 246.826 49.9729C246.872 50.0176 246.894 50.0176 246.937 50.0176H247.073L247.119 50.04V50.241L247.073 50.2633H245.88L245.835 50.241ZM246.983 48.7896C247.164 48.7896 247.321 48.7449 247.411 48.6333C247.5 48.5439 247.568 48.3876 247.568 48.209C247.568 48.0303 247.523 47.8964 247.434 47.7848C247.343 47.6732 247.207 47.6285 247.051 47.6285H246.96C246.915 47.6285 246.872 47.6507 246.849 47.6732C246.803 47.7177 246.803 47.7401 246.803 47.7848V48.7896H246.983Z" fill="#00684A"/>
        </g>
        <defs>
        <clipPath id="clip0_504_1049">
        <rect width="250" height="63.0672" fill="white" transform="translate(0 0.466797)"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[360px] md:w-[300px] w-[180px]',
      imageStyleTop: 'top-1/2 -translate-y-[140%]',
      headerText: 'MongoDB',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A NoSQL document-oriented database that stores data in flexible, JSON-like BSON format, offering scalability, high availability, and ease of integration with modern applications.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'be-card',
    },
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="250" viewBox="0 0 250 250" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M250 193.712C240.906 196.024 235.281 193.813 230.234 186.235L194.344 136.579L189.156 129.704L147.242 186.399C142.453 193.219 137.43 196.188 128.492 193.774L182.164 121.727L132.195 56.6491C140.789 54.9772 146.727 55.8287 152 63.5241L189.227 113.797L226.727 63.7975C231.531 56.9772 236.695 54.3834 245.32 56.8991L225.945 82.5866L199.695 116.766C196.57 120.672 197 123.344 199.875 127.118L250 193.712ZM0.0625 120.524L4.45312 98.9303C16.4062 56.1959 65.3906 38.4381 99.1719 64.8444C118.914 80.3756 123.82 102.344 122.844 126.954H11.5625C9.89063 171.251 41.7734 197.985 82.4219 184.344C96.6797 179.555 105.078 168.391 109.281 154.422C111.414 147.422 114.945 146.329 121.523 148.329C118.164 165.797 110.586 180.391 94.5703 189.524C70.6406 203.196 36.4844 198.774 18.5156 179.774C7.8125 168.751 3.39063 154.782 1.40625 139.844C1.09375 137.376 0.46875 135.024 0 132.657C0.0416667 128.615 0.0625 124.574 0.0625 120.532V120.524ZM11.7656 117.555H112.328C111.672 85.5241 91.7266 62.7741 64.4687 62.5788C34.5469 62.3444 13.0625 84.5553 11.7656 117.555Z" fill="black"/>
        </svg>
      `),
      imageSize: 'lg:w-[360px] md:w-[300px] w-[180px]',
      imageStyleTop: 'top-1/2 -translate-y-[75%]',
      headerText: 'ExpressJS',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A minimal and flexible Node.js web application framework that provides a robust set of features for building web and mobile applications, making routing, middleware, and request handling easier.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'be-card',
    },
    {
      image: '',
      isSvg: this.sanitizer
        ?.bypassSecurityTrustHtml(`<svg width="250" height="250" viewBox="0 0 250 250" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M125 17.2578L218.307 71.1289V178.871L125 232.742L31.6925 178.871V71.1289L125 17.2578ZM42.1618 77.1734V156.313L110.699 37.6036L42.1618 77.1734ZM125 33.7716L45.9938 170.614H204.006L125 33.7716ZM193.537 181.084H56.463L125 220.653L193.537 181.084ZM207.838 156.313L139.301 37.6036L207.838 77.1734V156.313Z" fill="#E10098"/>
          <path d="M125 45.352C137.178 45.352 147.05 35.4798 147.05 23.302C147.05 11.1241 137.178 1.25195 125 1.25195C112.822 1.25195 102.95 11.1241 102.95 23.302C102.95 35.4798 112.822 45.352 125 45.352Z" fill="#E10098"/>
          <path d="M213.073 96.2016C225.251 96.2016 235.123 86.3294 235.123 74.1516C235.123 61.9737 225.251 52.1016 213.073 52.1016C200.895 52.1016 191.023 61.9737 191.023 74.1516C191.023 86.3294 200.895 96.2016 213.073 96.2016Z" fill="#E10098"/>
          <path d="M213.073 197.899C225.251 197.899 235.123 188.027 235.123 175.849C235.123 163.671 225.251 153.799 213.073 153.799C200.895 153.799 191.023 163.671 191.023 175.849C191.023 188.027 200.895 197.899 213.073 197.899Z" fill="#E10098"/>
          <path d="M125 248.748C137.178 248.748 147.05 238.876 147.05 226.698C147.05 214.521 137.178 204.648 125 204.648C112.822 204.648 102.95 214.521 102.95 226.698C102.95 238.876 112.822 248.748 125 248.748Z" fill="#E10098"/>
          <path d="M36.9147 197.899C49.0926 197.899 58.9647 188.027 58.9647 175.849C58.9647 163.671 49.0926 153.799 36.9147 153.799C24.7369 153.799 14.8647 163.671 14.8647 175.849C14.8647 188.027 24.7369 197.899 36.9147 197.899Z" fill="#E10098"/>
          <path d="M36.9145 96.2016C49.0924 96.2016 58.9645 86.3294 58.9645 74.1516C58.9645 61.9737 49.0924 52.1016 36.9145 52.1016C24.7366 52.1016 14.8645 61.9737 14.8645 74.1516C14.8645 86.3294 24.7366 96.2016 36.9145 96.2016Z" fill="#E10098"/>
          </svg>
        `),
      imageSize: 'lg:w-[360px] md:w-[300px] w-[180px]',
      imageStyleTop: 'top-1/2 -translate-y-[75%]',
      headerText: 'GraphQL',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A query language for APIs that allows clients to request specific data and receive predictable results, offering more flexibility and efficiency compared to traditional RESTful APIs.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'be-card',
    },
    {
      image: '',
      isSvg: this.sanitizer
        ?.bypassSecurityTrustHtml(`<svg width="256" height="256" viewBox="0 0 256 256" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_504_956)">
            <path d="M160.227 178.519H187.857L143.75 64.049H113.201L69.094 178.519H96.726L103.934 159.129H145.609L138.065 137.673H110.625L128.475 88.419L160.227 178.519ZM251.339 93.768C251.106 92.9262 250.71 92.1386 250.172 91.4503C249.635 90.762 248.967 90.1864 248.206 89.7566C247.446 89.3269 246.608 89.0512 245.741 88.9456C244.875 88.84 243.995 88.9064 243.154 89.141C241.455 89.6125 240.013 90.7395 239.145 92.2741C238.278 93.8087 238.055 95.6252 238.526 97.324C241.299 107.313 242.705 117.633 242.704 128C242.704 191.248 191.248 242.702 128 242.702C64.752 242.702 13.297 191.248 13.297 128C13.297 64.751 64.752 13.296 128 13.296C154.793 13.296 180.718 22.814 201.179 39.752C200.36 41.7069 199.939 43.8055 199.941 45.925C199.941 54.76 207.103 61.922 215.938 61.922C224.773 61.922 231.935 54.76 231.935 45.925C231.935 37.09 224.773 29.928 215.938 29.928C214.237 29.928 212.6 30.199 211.062 30.691C188.022 11.056 158.513 0 128 0C57.421 0 0 57.42 0 128C0 198.579 57.421 255.999 128 255.999C198.579 255.999 256 198.579 256 128C256.001 116.431 254.433 104.915 251.339 93.768Z" fill="#112B49"/>
            </g>
            <defs>
            <clipPath id="clip0_504_956">
            <rect width="256" height="256" fill="white"/>
            </clipPath>
            </defs>
            </svg>
        `),
      imageSize: 'lg:w-[360px] md:w-[300px] w-[180px]',
      imageStyleTop: 'top-1/2 -translate-y-[72%]',
      headerText: 'Apollo',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A comprehensive suite of tools for building, managing, and consuming GraphQL APIs, Apollo offers client and server-side libraries that simplify data fetching, caching, and state management for modern applications.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'be-card',
    },
  ];

  aiCard = [
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="268" viewBox="0 0 250 268" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_1070)">
        <path d="M142.311 41.0791V82.1626L213.464 123.246V82.1626L142.311 41.0791ZM0 82.1626V123.246L35.5766 143.784V102.704L0 82.1626ZM106.73 102.704L71.1532 123.246V246.488L106.73 267.03V184.867L142.311 205.409V164.326L106.73 143.784V102.704Z" fill="#E55B2D"/>
        <path d="M142.311 41.0791L35.5765 102.704V143.784L106.73 102.704V143.784L142.311 123.246V41.0791ZM249.045 61.6209L213.464 82.1626V123.246L249.045 102.704V61.6209ZM177.887 143.784L142.311 164.326V205.409L177.887 184.867V143.784ZM142.311 205.409L106.73 184.867V267.03L142.311 246.488V205.409Z" fill="#ED8E24"/>
        <path d="M142.311 0L0 82.1629L35.5766 102.705L142.311 41.0793L213.464 82.1629L249.045 61.6211L142.311 0ZM142.311 123.246L106.73 143.784L142.311 164.326L177.887 143.784L142.311 123.246Z" fill="#F8BF3C"/>
        </g>
        <defs>
        <clipPath id="clip0_504_1070">
        <rect width="250" height="267.578" fill="white"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[240px] md:w-[200px] w-[120px]',
      imageStyleTop: 'top-1/2 -translate-y-[75%]',
      headerText: 'TensorFlow',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'An open-source machine learning framework developed by Google, used for building and deploying ML models for a variety of tasks like neural networks, deep learning, and AI applications.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'ai-card',
    },
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="250" viewBox="0 0 250 250" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_1075)">
        <path d="M0 0H250V250H0V0Z" fill="#D00000"/>
        <path d="M92.9565 192.971V146.559L111.803 127.772L159.081 197.637L180.736 197.807L184.734 189.646L129.719 109.836L180.366 58.345L177.562 50.1807H155.951L92.9565 113.158V54.9885L88.3516 50.1807H72.7106L68.105 54.9878V192.769L72.9553 197.698L88.0274 197.638L92.9565 192.971Z" fill="white"/>
        </g>
        <defs>
        <clipPath id="clip0_504_1075">
        <rect width="250" height="250" fill="white"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[240px] md:w-[200px] w-[120px]',
      imageStyleTop: 'top-1/2 -translate-y-[75%]',
      headerText: 'Keras',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A high-level deep learning API, built on top of TensorFlow, that allows for easy and fast prototyping of neural networks with simple, user-friendly abstractions.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'ai-card',
    },
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="303" viewBox="0 0 250 303" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_1078)">
        <path d="M124.829 0V43.9973L57.228 111.596C21.8481 147.48 21.8517 205.203 57.2388 241.737L58.322 242.838C94.4748 279.673 153.82 279.673 190.655 242.838C227.121 207.046 227.486 148.524 191.749 111.617L190.655 110.505L213.165 87.9945C262.278 137.108 262.278 215.894 213.165 265.348C165.075 314.461 85.9482 314.461 36.8349 265.348C-11.7872 216.726 -12.2734 138.687 35.3763 89.4769L36.8349 87.9945L124.829 0ZM169.168 49.7954C178.209 49.7954 185.539 57.1249 185.539 66.1664C185.539 75.2079 178.209 82.5375 169.168 82.5375C160.126 82.5375 152.797 75.2079 152.797 66.1664C152.797 57.1249 160.126 49.7954 169.168 49.7954Z" fill="#EE4C2C"/>
        </g>
        <defs>
        <clipPath id="clip0_504_1078">
        <rect width="250" height="302.734" fill="white"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[240px] md:w-[200px] w-[120px]',
      imageStyleTop: 'top-1/2 -translate-y-[75%]',
      headerText: 'PyTorch',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'An open-source deep learning framework developed by Facebook, favored for its flexibility, dynamic computation graph, and strong support for building complex neural networks.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'ai-card',
    },
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="149" viewBox="0 0 250 149" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_1085)">
        <path d="M47.084 48.2494L22.6048 23.666C9.10048 37.1993 1.51624 55.5371 1.51624 74.6556C1.51624 93.7741 9.10048 112.112 22.6048 125.645L47.1882 101.062C40.1836 94.0656 36.2391 84.5772 36.2196 74.6771C36.2001 64.7771 40.1071 55.2732 47.084 48.2494Z" fill="#E8710A"/>
        <path d="M22.6049 23.6664L47.084 48.2497C50.5571 44.7726 54.6815 42.0141 59.2215 40.132C63.7614 38.25 68.6278 37.2812 73.5424 37.2812C78.4569 37.2812 83.3233 38.25 87.8632 40.132C92.4032 42.0141 96.5276 44.7726 100.001 48.2497L117.813 17.7289L116.772 16.8956C102.878 6.5299 85.7178 1.50995 68.4279 2.75313C51.138 3.99632 34.8728 11.4196 22.6049 23.6664ZM117.917 131.583L100.001 101.166C96.5276 104.644 92.4032 107.402 87.8632 109.284C83.3233 111.166 78.4569 112.135 73.5424 112.135C68.6278 112.135 63.7614 111.166 59.2215 109.284C54.6815 107.402 50.5571 104.644 47.084 101.166L22.6049 125.75C34.8483 137.887 51.0315 145.242 68.2269 146.484C85.4223 147.726 102.494 142.773 116.355 132.521L117.501 131.583M124.792 23.6664C111.288 37.1997 103.704 55.5374 103.704 74.656C103.704 93.7745 111.288 112.112 124.792 125.646L149.376 101.062C142.358 94.045 138.416 84.5277 138.416 74.6039C138.416 64.6801 142.358 55.1627 149.376 48.1456C156.393 41.1284 165.91 37.1862 175.834 37.1862C185.758 37.1862 195.275 41.1284 202.292 48.1456L226.98 23.6664C220.275 16.9483 212.311 11.6185 203.543 7.98198C194.776 4.34546 185.378 2.47363 175.886 2.47363C166.395 2.47363 156.996 4.34546 148.229 7.98198C139.461 11.6185 131.497 16.9483 124.792 23.6664Z" fill="#F9AB00"/>
        <path d="M226.98 23.666L202.501 48.2494C209.518 55.2665 213.46 64.7839 213.46 74.7077C213.46 84.6315 209.518 94.1488 202.501 101.166C195.483 108.183 185.966 112.125 176.042 112.125C166.119 112.125 156.601 108.183 149.584 101.166L124.792 125.749C138.329 139.3 156.695 146.919 175.849 146.928C185.333 146.933 194.726 145.07 203.49 141.445C212.254 137.82 220.218 132.504 226.928 125.801C233.637 119.099 238.961 111.14 242.595 102.379C246.229 93.619 248.102 84.2287 248.107 74.7445C248.112 65.2604 246.248 55.8681 242.623 47.1041C238.998 38.34 233.683 30.3757 226.98 23.666Z" fill="#E8710A"/>
        </g>
        <defs>
        <clipPath id="clip0_504_1085">
        <rect width="250" height="148.256" fill="white" transform="translate(0 0.37207)"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[360px] md:w-[300px] w-[180px]',
      imageStyleTop: 'top-1/2 -translate-y-[90%]',
      headerText: 'Google Colab',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A cloud-based Jupyter notebook environment provided by Google, allowing users to write and execute Python code, especially for data science and machine learning, with free access to GPUs and TPUs.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'ai-card',
    },
    {
      image: '',
      isSvg: this.sanitizer?.bypassSecurityTrustHtml(`<svg width="250" height="127" viewBox="0 0 250 127" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_504_1089)">
        <path d="M63.5292 0C28.499 0 0 28.424 0 63.3594C0 98.2948 28.5 126.719 63.5292 126.719H186.471C221.501 126.719 250 98.2948 250 63.3594C250 28.424 221.5 0 186.471 0H63.5292ZM62.2646 20.1406C67.4 20.2698 72.8896 22.7406 75.525 26.6281C79.351 31.4115 80.5021 37.7406 84.8417 42.1823C90.6792 48.5552 97.3313 54.1667 102.718 60.9531C107.814 67.1552 111.453 74.4292 114.63 81.7604C115.926 84.1927 115.94 87.1792 117.859 89.2573C118.805 90.5115 123.428 93.9271 122.425 95.1375C123.003 96.3917 127.323 98.1167 125.824 99.3323C123.799 99.749 121.523 99.8281 119.974 98.2135C119.402 99.526 118.068 98.8344 117.038 98.6636C116.948 98.9183 116.861 99.1738 116.777 99.4302C113.352 99.6583 110.783 96.174 109.152 93.5448C105.911 91.7948 102.233 90.7302 98.9229 88.899C98.7333 91.9146 99.3938 95.6542 96.5167 97.6C96.3708 103.397 105.304 98.2833 106.123 102.604C105.488 102.674 104.783 102.505 104.275 102.993C101.943 105.255 99.2698 101.279 96.5823 102.92C92.974 104.732 92.6156 106.213 88.149 106.586C87.9021 106.213 88 105.97 88.2104 105.742C89.4677 104.284 89.5594 102.569 91.7062 101.947C89.4958 101.599 87.6448 102.815 85.7833 103.777C83.3635 104.767 83.3833 101.547 79.6604 103.948C79.2479 103.613 79.4438 103.307 79.6792 103.048C80.625 101.895 81.8688 101.725 83.2729 101.79C76.3667 97.95 73.1156 106.484 69.926 102.24C68.9677 102.493 68.6083 103.352 68.0042 103.96C67.4833 103.39 67.876 102.698 67.901 102.026C67.2781 101.734 66.4885 101.599 66.6729 100.603C65.4531 100.192 64.6021 100.91 63.6938 101.595C62.874 100.961 64.2479 100.041 64.5021 99.3813C65.2333 98.1146 66.8979 99.1208 67.7427 98.2083C70.1448 96.8458 73.4927 99.0562 76.2375 98.6823C78.3521 98.9479 80.9708 96.7813 79.9104 94.6198C77.649 91.7375 78.0458 87.9677 77.9948 84.5208C77.7156 82.5115 72.8802 79.9562 71.4823 77.7896C69.7542 75.8385 68.4094 73.574 67.0625 71.35C62.2021 61.9667 63.7313 49.9083 57.6073 41.1969C54.8365 42.724 51.2271 42.0031 48.8385 39.9573C47.549 41.1292 47.4927 42.6635 47.3906 44.2917C44.2969 41.2063 44.6896 35.376 47.1615 31.9427C48.1708 30.5865 49.3771 29.4708 50.724 28.4885C51.0281 28.2667 51.1313 28.0521 51.125 27.7104C52.3479 22.224 57.1292 20.0115 62.2646 20.1406ZM191.505 24.9323C197.313 24.9323 202.761 27.1812 206.859 31.2677C210.957 35.3542 213.214 40.7937 213.214 46.5844C213.214 52.376 210.956 57.8135 206.859 61.8948L197.464 71.2708C194.962 73.7682 191.888 75.6157 188.508 76.6521L188.338 76.701L188.277 76.8719C187.196 79.7338 185.512 82.3299 183.34 84.4844L173.946 93.8542C169.848 97.9417 164.394 100.191 158.586 100.191C152.779 100.191 147.33 97.9406 143.232 93.8542C134.764 85.4094 134.764 71.6729 143.232 63.2271L152.627 53.8573C155.12 51.363 158.19 49.5227 161.565 48.5L161.742 48.4448L161.802 48.2802C162.889 45.4093 164.577 42.8037 166.752 40.6375L176.146 31.2677C180.244 27.1802 185.699 24.9323 191.505 24.9323ZM191.505 34.2708C189.883 34.2656 188.276 34.5815 186.776 35.2005C185.276 35.8194 183.914 36.7291 182.768 37.8771L173.374 47.2469C172.119 48.5009 171.151 50.0115 170.534 51.675C169.918 53.3385 169.669 55.1156 169.804 56.8844L169.859 57.4802C170.196 60.2427 171.411 62.7344 173.374 64.6854C174.728 66.0354 176.221 66.8875 178.031 67.4833C178.128 68.0273 178.177 68.5787 178.177 69.1313C178.182 70.3513 177.944 71.56 177.477 72.6873C177.011 73.8146 176.325 74.838 175.459 75.6979L174.882 76.275C171.744 75.2042 169.127 73.6396 166.764 71.2833C163.638 68.181 161.543 64.1922 160.763 59.8583L160.659 59.2563L160.179 59.6396C159.86 59.8987 159.556 60.1748 159.267 60.4667L149.867 69.8365C145.051 74.6385 145.051 82.4615 149.867 87.2635C152.274 89.6646 155.44 90.8677 158.61 90.8688C161.78 90.8688 164.941 89.6646 167.348 87.2625L176.743 77.8927C181.558 73.0906 181.558 65.275 176.743 60.4656C175.458 59.1845 173.904 58.2062 172.194 57.6021C172.1 57.0476 172.051 56.4863 172.048 55.924C172.048 53.225 173.114 50.6635 175.07 48.7125C178.215 49.7833 181.007 51.5187 183.364 53.8687C186.496 56.9927 188.566 60.9417 189.359 65.2938L189.469 65.8958L189.943 65.5073C190.265 65.2485 190.574 64.9724 190.867 64.6802L200.263 55.3094C205.077 50.5073 205.083 42.6802 200.263 37.8771C199.115 36.7282 197.752 35.818 196.251 35.1991C194.75 34.5801 193.141 34.2646 191.518 34.2708H191.505ZM87.6198 87.9865C86.7938 91.1927 86.5219 96.6573 82.3427 96.8156C81.999 98.6656 83.6219 99.3625 85.1083 98.7677C86.5771 98.0958 87.276 99.2969 87.7719 100.494C90.0396 100.824 93.3906 99.7385 93.5177 97.0583C90.1323 95.1135 89.0875 91.4146 87.6198 87.9865Z" fill="#1C3C3C"/>
        </g>
        <defs>
        <clipPath id="clip0_504_1089">
        <rect width="250" height="127" fill="white"/>
        </clipPath>
        </defs>
        </svg>
      `),
      imageSize: 'lg:w-[360px] md:w-[300px] w-[180px]',
      imageStyleTop: 'top-1/2 -translate-y-[95%]',
      headerText: 'LangChain',
      headerTextColor: 'text-[#1A1A1A]',
      paragraphText:
        'A framework designed for developing applications powered by language models, enabling developers to build advanced LLM-based systems with features like prompt management, memory, and integrations.',
      paragraphTextColor: 'text-[#2A2A2A]',
      background: 'bg-[#FFFFFF]',
      stroke: 'border border-[#1A1A1A]',
      class: 'ai-card',
    },
  ];

  titleCard = {
    background: 'bg-[#7D6B58]',
    text: '<h1 class="font-bold lg:text-9xl md:text-7xl text-[54px] text-[#1A1A1A]">The <span class="text-[#EAE8E6]">most efficient</span> technology</h1>',
  };

  checkAndAnimate(element: HTMLElement, isBoxCard?: boolean) {
    if (element && !isBoxCard) {
      const rect = element?.getBoundingClientRect();
      const windowHeight = window.innerHeight;

      if (rect.top <= windowHeight && rect.bottom >= 0) {
        this.renderer.addClass(element, 'show');
      }
    }
  }
}
